{
  "name": "t-component",
  "repo": "component/t",
  "description": "tiny translation helper",
  "version": "1.0.0",
  "keywords": [],
  "dependencies": {},
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": [
    "index.js"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/component/t.git"
  },
  "readme": "\n# t\n\n  tiny translation helper.\n\n## Installation\n\n    $ component install component/t\n\n## API\n\n### t(string, [object], [lang])\n\n  Return a translatable `string`, with optional\n  substitutions keyed in `object` using language `lang`.\n\n```js\nvar t = require('t');\n\nt('Hello');\n// => \"Hello\"\n\nt('Hello {name}', { name: 'Tobi' });\n// => \"Hello Tobi\"\n```\n\n### t.lang()\n\n  Get the current language code, for example \"en\".\n\n### t.lang(code)\n\n  Set language `code`.\n\n### t.CODE = object\n\n  Define translations, for example:\n\n```js\nt.es = {\n  'Hello {name}': 'Hola {name}'\n};\n\nt('Hello {name}', { name: 'Tobi' });\n// => \"Hello Tobi\"\n\nt.lang('es');\nt('Hello {name}', { name: 'Tobi' }).should.equal('Hola Tobi');\n// => \"Hola Tobi\"\n```\n\n# License\n\n  MIT\n\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/component/t/issues"
  },
  "_id": "t-component@1.0.0",
  "_from": "t-component@1.0.0"
}
