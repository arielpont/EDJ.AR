{
  "name": "component-stylus-plugin",
  "version": "0.3.1",
  "description": "Highly customizable Stylus compiler plugin for Component",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rschmukler/component-stylus-plugin"
  },
  "keywords": [
    "component",
    "stylus"
  ],
  "author": {
    "name": "Ryan Schmukler"
  },
  "license": "MIT",
  "dependencies": {
    "batch": "~0.5.0",
    "stylus": "~0.43.0",
    "debug": "~0.7.2"
  },
  "devDependencies": {
    "mocha": "^1.17.1",
    "component-builder": "^0.10.0"
  },
  "readme": "# Component Stylus Plugin\n\nPlugin for [component/builder](http://github.com/component/builder.js) to enable the direct use of stylus with components.\n\n\n## Usage Example\n\n    var Builder  = require('component-builder'),\n    stylusPlugin = require('component-stylus-plugin');\n\n    var builder = new Builder('.');\n    builder.copyAssetsTo('public');\n    builder.use(stylusPlugin);\n\n    builder.build(function(err, res) {\n      write('public/app.js', res.require + res.js);\n      write('public/app.css', res.css);\n    });\n\n## Options\n\nComponent Stylus Plugin is highly customizable and exhibits a lot of the options that stylus itself has.\n\n### Compression (default false)\n\nMinfies the output of the stylus files that are being compiled\n\n    stylusPlugin.compress = false\n\n### Line Numbers (default true)\n\nAdds line numbers as comments to the CSS being output. Very helpful for debugging.\n\n    stylusPlugin.linenos = true\n\n### Firebug Support (default false)\n\nAdds support for Firebug's Stylus plugin for Firefox\n\n    stylusPlugin.firebug = false\n\n### Imports (default empty)\n\nAllows you to import stylus files into your stylus files before compiling. Useful for custom mixins or global\nvariable definitions. You must provide a full path to the files.\n\n    stylusPlugin.imports = [__dirname + '/../globals/variableDefinitions.styl',\n                            __dirname + '/../globals/customMixins.styl']\n\nIf you don't want to have to define imported files in the `stylusPlugin.imports` option, it is possible to import stylus file from a component using `@import \"componentName/fileName\"`\n\nFor instance:\n```\n{\n  ...\n  \"local\": [\n    \"base-styles\"\n  ],\n}\n```\n\n```\n@import \"base-styles/animation-mixin\";\n\n.foo {\n  animation();\n  position: relative;\n}\n```\n\nThere is an example in the [tests](https://github.com/rschmukler/component-stylus-plugin/tree/master/test/fixtures/with-import).\n\n**However, you must be careful to not import files containing CSS properties, otherwise they will be duplicated in the output.**\nOnly import files containing variables, placeholder selectors, functions or mixins.\n\n### Include CSS (default false)\n\nAllow `@import` statements to load up regular CSS.\n\n    stylusPlugin.includeCSS = false\n\n### Paths (default empty)\n\nAdd additional paths to be searched for `@import` statements\n\n    stylusPlugin.paths = [__dirname + '/../junkDrawer',\n                          __dirname + '/../someOtherPlace']\n\n### Plugins (default empty)\n\nLoad up any additional plugins that you want to use.\n\n    var nib = require('nib')();\n\n    stylusPlugin.plugins.push(nib);\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rschmukler/component-stylus-plugin/issues"
  },
  "_id": "component-stylus-plugin@0.3.1",
  "_from": "component-stylus-plugin@~0.3.1"
}
